@inject IArticleService ArticleService

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        @*#CFCFCF*@
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi" aria-hidden="true"><img class="img-icon-sidebar" src="icons/loupe.png"/></span> <div class="text-sidebar">Search</div>
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="oi" aria-hidden="true"><img src="icons/open-book.png"/></span>  <div class="text-sidebar">Knowledge</div>
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="fetchdata">
                <span class="oi" aria-hidden="true"><img src="icons/pharmacy.png"/></span>  <div class="text-sidebar">Pharmacy</div>
            </NavLink>
        </div>


        @*
            @if(ArticleService.ArticleTitlesAndPaths != null)
        {
            @foreach (var item in ArticleService.ArticleTitlesAndPaths)
            {
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="@item.Item2">
                        <span class="oi" aria-hidden="true"><img src="@item.Item3"/></span>  <div class="text-sidebar">@item.Item1</div>
                    </NavLink>
                </div>
            }
        }
        *@
        
        
        
    </nav>
</div>

@code {

    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        await ArticleService.GetOnlyArticleTitlesAsync();
    }
}
