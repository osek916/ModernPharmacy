// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ModernPharmacy.Server.Data;

#nullable disable

namespace ModernPharmacy.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230304195828_EditedArticleTag")]
    partial class EditedArticleTag
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DrugSubstance", b =>
                {
                    b.Property<int>("DrugsId")
                        .HasColumnType("int");

                    b.Property<int>("SubstancesId")
                        .HasColumnType("int");

                    b.HasKey("DrugsId", "SubstancesId");

                    b.HasIndex("SubstancesId");

                    b.ToTable("DrugSubstance");
                });

            modelBuilder.Entity("ModernPharmacy.Shared.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PharmacyId")
                        .HasColumnType("int");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PharmacyId")
                        .IsUnique();

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Międzylesie",
                            PharmacyId = 1,
                            PostalCode = "57530",
                            Street = "Graniczna 7"
                        },
                        new
                        {
                            Id = 2,
                            City = "Wrocław",
                            PharmacyId = 2,
                            PostalCode = "21599",
                            Street = "Wolności 22c"
                        },
                        new
                        {
                            Id = 3,
                            City = "Szczecin",
                            PharmacyId = 3,
                            PostalCode = "35300",
                            Street = "Słowiańska 3"
                        },
                        new
                        {
                            Id = 4,
                            City = "Gryfice",
                            PharmacyId = 4,
                            PostalCode = "64554",
                            Street = "Poniatowska 4"
                        },
                        new
                        {
                            Id = 5,
                            City = "Gryfice",
                            PharmacyId = 5,
                            PostalCode = "72-300",
                            Street = "Grunwaldzka 3"
                        });
                });

            modelBuilder.Entity("ModernPharmacy.Shared.Entities.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedById = 1,
                            CreatedDate = new DateTime(2023, 3, 4, 0, 0, 0, 0, DateTimeKind.Local),
                            ImagePath = "articleImages/antibiotics.jpg",
                            PagePath = "Antibiotics",
                            ParentId = 0,
                            Text = "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                            Title = "Antibiotics"
                        },
                        new
                        {
                            Id = 2,
                            CreatedById = 1,
                            CreatedDate = new DateTime(2023, 3, 4, 0, 0, 0, 0, DateTimeKind.Local),
                            ImagePath = "articleImages/nootropics.jpg",
                            PagePath = "Nootropics",
                            ParentId = 0,
                            Text = "<b>Lorem Ipsum is simply dummy text</b> of the printing<strong> and typesetting </strong> industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                            Title = "Nootropics"
                        },
                        new
                        {
                            Id = 3,
                            CreatedById = 1,
                            CreatedDate = new DateTime(2023, 3, 4, 0, 0, 0, 0, DateTimeKind.Local),
                            ImagePath = "articleImages/painkillers.jpg",
                            PagePath = "Painkillers",
                            ParentId = 0,
                            Text = "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                            Title = "Painkillers"
                        },
                        new
                        {
                            Id = 4,
                            CreatedById = 1,
                            CreatedDate = new DateTime(2023, 3, 4, 0, 0, 0, 0, DateTimeKind.Local),
                            ImagePath = "articleImages/antiepileptic.jpg",
                            PagePath = "Antiepileptic",
                            ParentId = 0,
                            Text = "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                            Title = "Antiepileptic"
                        },
                        new
                        {
                            Id = 5,
                            CreatedById = 1,
                            CreatedDate = new DateTime(2023, 3, 4, 0, 0, 0, 0, DateTimeKind.Local),
                            ImagePath = "articleImages/sleep.jpg",
                            PagePath = "SleepHigiene",
                            ParentId = 0,
                            Text = "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                            Title = "SleepHigiene"
                        },
                        new
                        {
                            Id = 6,
                            CreatedById = 1,
                            CreatedDate = new DateTime(2023, 3, 4, 0, 0, 0, 0, DateTimeKind.Local),
                            ImagePath = "articleImages/vitamins.jpg",
                            PagePath = "Vitamins",
                            ParentId = 0,
                            Text = "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                            Title = "Vitamins"
                        });
                });

            modelBuilder.Entity("ModernPharmacy.Shared.Entities.ArticleTag", b =>
                {
                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.Property<int>("ArticleTagId")
                        .HasColumnType("int");

                    b.HasKey("ArticleId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("ArticleTags");

                    b.HasData(
                        new
                        {
                            ArticleId = 1,
                            TagId = 1,
                            ArticleTagId = 1
                        },
                        new
                        {
                            ArticleId = 1,
                            TagId = 3,
                            ArticleTagId = 2
                        },
                        new
                        {
                            ArticleId = 1,
                            TagId = 16,
                            ArticleTagId = 3
                        },
                        new
                        {
                            ArticleId = 1,
                            TagId = 18,
                            ArticleTagId = 4
                        },
                        new
                        {
                            ArticleId = 2,
                            TagId = 1,
                            ArticleTagId = 5
                        },
                        new
                        {
                            ArticleId = 2,
                            TagId = 4,
                            ArticleTagId = 6
                        },
                        new
                        {
                            ArticleId = 2,
                            TagId = 9,
                            ArticleTagId = 7
                        },
                        new
                        {
                            ArticleId = 3,
                            TagId = 1,
                            ArticleTagId = 8
                        },
                        new
                        {
                            ArticleId = 3,
                            TagId = 7,
                            ArticleTagId = 9
                        },
                        new
                        {
                            ArticleId = 3,
                            TagId = 18,
                            ArticleTagId = 10
                        },
                        new
                        {
                            ArticleId = 5,
                            TagId = 1,
                            ArticleTagId = 11
                        },
                        new
                        {
                            ArticleId = 5,
                            TagId = 2,
                            ArticleTagId = 12
                        },
                        new
                        {
                            ArticleId = 5,
                            TagId = 8,
                            ArticleTagId = 13
                        },
                        new
                        {
                            ArticleId = 6,
                            TagId = 4,
                            ArticleTagId = 14
                        },
                        new
                        {
                            ArticleId = 6,
                            TagId = 16,
                            ArticleTagId = 15
                        },
                        new
                        {
                            ArticleId = 4,
                            TagId = 1,
                            ArticleTagId = 16
                        });
                });

            modelBuilder.Entity("ModernPharmacy.Shared.Entities.DifferentProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DifferentProducts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Needle Description",
                            Name = "needle",
                            ProductId = 0
                        },
                        new
                        {
                            Id = 2,
                            Description = "Bandages Description",
                            Name = "bandages",
                            ProductId = 0
                        },
                        new
                        {
                            Id = 3,
                            Description = "Atomizer Description",
                            Name = "atomizer",
                            ProductId = 0
                        },
                        new
                        {
                            Id = 4,
                            Description = "Hydrogen Dioxide Description",
                            Name = "hydrogen dioxide",
                            ProductId = 0
                        },
                        new
                        {
                            Id = 5,
                            Description = "Bacteriostatic Water Description",
                            Name = "bacteriostatic water",
                            ProductId = 0
                        },
                        new
                        {
                            Id = 6,
                            Description = "Urine Cup Description",
                            Name = "urine cup",
                            ProductId = 0
                        });
                });

            modelBuilder.Entity("ModernPharmacy.Shared.Entities.Drug", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LumpSumDrug")
                        .HasColumnType("bit");

                    b.Property<int?>("MilligramsForTheWholeDrug")
                        .HasColumnType("int");

                    b.Property<int?>("MilligramsPerTablets")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumberOfTablets")
                        .HasColumnType("int");

                    b.Property<bool>("PrescriptionRequired")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Drugs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Description Apap",
                            LumpSumDrug = false,
                            MilligramsPerTablets = 500,
                            Name = "Apap",
                            NumberOfTablets = 10,
                            PrescriptionRequired = false,
                            ProductId = 0
                        },
                        new
                        {
                            Id = 2,
                            Description = "Description Apap",
                            LumpSumDrug = false,
                            MilligramsPerTablets = 500,
                            Name = "Apap",
                            NumberOfTablets = 5,
                            PrescriptionRequired = false,
                            ProductId = 0
                        },
                        new
                        {
                            Id = 3,
                            Description = "Description Apap",
                            LumpSumDrug = false,
                            MilligramsPerTablets = 500,
                            Name = "Apap",
                            NumberOfTablets = 20,
                            PrescriptionRequired = false,
                            ProductId = 0
                        },
                        new
                        {
                            Id = 4,
                            Description = "Description Tylenol",
                            LumpSumDrug = false,
                            MilligramsPerTablets = 500,
                            Name = "Tylenol",
                            NumberOfTablets = 100,
                            PrescriptionRequired = false,
                            ProductId = 0
                        },
                        new
                        {
                            Id = 5,
                            Description = "Description Nurofen",
                            LumpSumDrug = false,
                            MilligramsPerTablets = 200,
                            Name = "Nurofen",
                            NumberOfTablets = 20,
                            PrescriptionRequired = false,
                            ProductId = 0
                        },
                        new
                        {
                            Id = 6,
                            Description = "Description Ibuprom",
                            LumpSumDrug = false,
                            MilligramsPerTablets = 200,
                            Name = "Ibuprom",
                            NumberOfTablets = 10,
                            PrescriptionRequired = false,
                            ProductId = 0
                        },
                        new
                        {
                            Id = 7,
                            Description = "Description Tramal Retard",
                            LumpSumDrug = true,
                            MilligramsPerTablets = 100,
                            Name = "Tramal retard",
                            NumberOfTablets = 50,
                            PrescriptionRequired = true,
                            ProductId = 0
                        },
                        new
                        {
                            Id = 8,
                            Description = "Description Valeriana",
                            LumpSumDrug = false,
                            MilligramsPerTablets = 2500,
                            Name = "Valeriana",
                            NumberOfTablets = 60,
                            PrescriptionRequired = false,
                            ProductId = 0
                        },
                        new
                        {
                            Id = 9,
                            Description = "Description Morfeo",
                            LumpSumDrug = false,
                            MilligramsPerTablets = 10,
                            Name = "Morfeo",
                            NumberOfTablets = 10,
                            PrescriptionRequired = false,
                            ProductId = 0
                        },
                        new
                        {
                            Id = 10,
                            Description = "Description Sonata",
                            LumpSumDrug = false,
                            MilligramsPerTablets = 10,
                            Name = "Sonata",
                            NumberOfTablets = 10,
                            PrescriptionRequired = false,
                            ProductId = 0
                        },
                        new
                        {
                            Id = 11,
                            Description = "Description Aviomarin",
                            LumpSumDrug = false,
                            MilligramsPerTablets = 500,
                            Name = "Aviomarin",
                            NumberOfTablets = 5,
                            PrescriptionRequired = false,
                            ProductId = 0
                        },
                        new
                        {
                            Id = 12,
                            Description = "Description Zirtec",
                            LumpSumDrug = true,
                            MilligramsPerTablets = 10,
                            Name = "Zirtec",
                            NumberOfTablets = 20,
                            PrescriptionRequired = true,
                            ProductId = 0
                        });
                });

            modelBuilder.Entity("ModernPharmacy.Shared.Entities.DrugSubstance", b =>
                {
                    b.Property<int>("SubstanceId")
                        .HasColumnType("int");

                    b.Property<int>("DrugId")
                        .HasColumnType("int");

                    b.Property<int>("DrugSubstanceId")
                        .HasColumnType("int");

                    b.HasKey("SubstanceId", "DrugId");

                    b.HasIndex("DrugId");

                    b.ToTable("DrugSubstances");

                    b.HasData(
                        new
                        {
                            SubstanceId = 1,
                            DrugId = 1,
                            DrugSubstanceId = 1
                        },
                        new
                        {
                            SubstanceId = 1,
                            DrugId = 2,
                            DrugSubstanceId = 2
                        },
                        new
                        {
                            SubstanceId = 1,
                            DrugId = 3,
                            DrugSubstanceId = 3
                        },
                        new
                        {
                            SubstanceId = 2,
                            DrugId = 4,
                            DrugSubstanceId = 4
                        },
                        new
                        {
                            SubstanceId = 2,
                            DrugId = 5,
                            DrugSubstanceId = 5
                        },
                        new
                        {
                            SubstanceId = 2,
                            DrugId = 6,
                            DrugSubstanceId = 6
                        },
                        new
                        {
                            SubstanceId = 3,
                            DrugId = 7,
                            DrugSubstanceId = 7
                        },
                        new
                        {
                            SubstanceId = 4,
                            DrugId = 8,
                            DrugSubstanceId = 8
                        },
                        new
                        {
                            SubstanceId = 5,
                            DrugId = 9,
                            DrugSubstanceId = 9
                        },
                        new
                        {
                            SubstanceId = 5,
                            DrugId = 10,
                            DrugSubstanceId = 10
                        },
                        new
                        {
                            SubstanceId = 9,
                            DrugId = 12,
                            DrugSubstanceId = 11
                        },
                        new
                        {
                            SubstanceId = 7,
                            DrugId = 11,
                            DrugSubstanceId = 12
                        });
                });

            modelBuilder.Entity("ModernPharmacy.Shared.Entities.Pharmacy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasPrescriptionDrugs")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pharmacies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressId = 0,
                            ContactEmail = "slowik@apteka.pl",
                            ContactNumber = "723171222",
                            HasPrescriptionDrugs = true,
                            Name = "Slownik"
                        },
                        new
                        {
                            Id = 2,
                            AddressId = 0,
                            ContactEmail = "drugaapteka@apteka.pl",
                            ContactNumber = "594034033",
                            HasPrescriptionDrugs = true,
                            Name = "DrugaApteka"
                        },
                        new
                        {
                            Id = 3,
                            AddressId = 0,
                            ContactEmail = "szczecinska@apteka.pl",
                            ContactNumber = "660650444",
                            HasPrescriptionDrugs = false,
                            Name = "Szczecinska"
                        },
                        new
                        {
                            Id = 4,
                            AddressId = 0,
                            ContactEmail = "gryficka@wp.pl",
                            ContactNumber = "594033222",
                            HasPrescriptionDrugs = false,
                            Name = "Gryficka"
                        },
                        new
                        {
                            Id = 5,
                            AddressId = 0,
                            ContactEmail = "kamil-losiak@wp.pl",
                            ContactNumber = "730660434",
                            HasPrescriptionDrugs = true,
                            Name = "ModernPharmacy"
                        });
                });

            modelBuilder.Entity("ModernPharmacy.Shared.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("DifferentProductId")
                        .HasColumnType("int");

                    b.Property<int?>("DrugId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ProposedPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("ShippingOption")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DifferentProductId")
                        .IsUnique()
                        .HasFilter("[DifferentProductId] IS NOT NULL");

                    b.HasIndex("DrugId")
                        .IsUnique()
                        .HasFilter("[DrugId] IS NOT NULL");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DrugId = 1,
                            ProposedPrice = 17.99m,
                            ShippingOption = false
                        },
                        new
                        {
                            Id = 2,
                            DrugId = 2,
                            ProposedPrice = 15.20m,
                            ShippingOption = false
                        },
                        new
                        {
                            Id = 3,
                            DrugId = 3,
                            ProposedPrice = 12.59m,
                            ShippingOption = false
                        },
                        new
                        {
                            Id = 4,
                            DrugId = 4,
                            ProposedPrice = 10.99m,
                            ShippingOption = false
                        },
                        new
                        {
                            Id = 5,
                            DrugId = 5,
                            ProposedPrice = 2.39m,
                            ShippingOption = false
                        },
                        new
                        {
                            Id = 6,
                            DrugId = 6,
                            ProposedPrice = 10.99m,
                            ShippingOption = false
                        },
                        new
                        {
                            Id = 7,
                            DrugId = 7,
                            ProposedPrice = 20.29m,
                            ShippingOption = false
                        },
                        new
                        {
                            Id = 8,
                            DrugId = 8,
                            ProposedPrice = 34.99m,
                            ShippingOption = false
                        },
                        new
                        {
                            Id = 9,
                            DrugId = 9,
                            ProposedPrice = 23.99m,
                            ShippingOption = false
                        },
                        new
                        {
                            Id = 10,
                            DrugId = 10,
                            ProposedPrice = 7.99m,
                            ShippingOption = false
                        },
                        new
                        {
                            Id = 11,
                            DrugId = 11,
                            ProposedPrice = 41.99m,
                            ShippingOption = false
                        },
                        new
                        {
                            Id = 12,
                            DrugId = 12,
                            ProposedPrice = 37.99m,
                            ShippingOption = false
                        },
                        new
                        {
                            Id = 13,
                            DifferentProductId = 1,
                            ProposedPrice = 23.99m,
                            ShippingOption = false
                        },
                        new
                        {
                            Id = 14,
                            DifferentProductId = 2,
                            ProposedPrice = 54.99m,
                            ShippingOption = false
                        },
                        new
                        {
                            Id = 15,
                            DifferentProductId = 3,
                            ProposedPrice = 23.99m,
                            ShippingOption = false
                        },
                        new
                        {
                            Id = 16,
                            DifferentProductId = 4,
                            ProposedPrice = 13.99m,
                            ShippingOption = false
                        },
                        new
                        {
                            Id = 17,
                            DifferentProductId = 5,
                            ProposedPrice = 11.99m,
                            ShippingOption = false
                        },
                        new
                        {
                            Id = 18,
                            DifferentProductId = 6,
                            ProposedPrice = 4.99m,
                            ShippingOption = false
                        });
                });

            modelBuilder.Entity("ModernPharmacy.Shared.Entities.ProductState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AmountOfProducts")
                        .HasColumnType("int");

                    b.Property<int>("HowMuchHasBeenSold")
                        .HasColumnType("int");

                    b.Property<int>("PharmacyId")
                        .HasColumnType("int");

                    b.Property<decimal>("PriceForOne")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PharmacyId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductStates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AmountOfProducts = 12,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 1,
                            PriceForOne = 20.99m,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            AmountOfProducts = 32,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 1,
                            PriceForOne = 17.99m,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 3,
                            AmountOfProducts = 23,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 1,
                            PriceForOne = 15.99m,
                            ProductId = 3
                        },
                        new
                        {
                            Id = 4,
                            AmountOfProducts = 66,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 1,
                            PriceForOne = 12.99m,
                            ProductId = 4
                        },
                        new
                        {
                            Id = 5,
                            AmountOfProducts = 11,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 1,
                            PriceForOne = 3.99m,
                            ProductId = 5
                        },
                        new
                        {
                            Id = 6,
                            AmountOfProducts = 3,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 1,
                            PriceForOne = 12.99m,
                            ProductId = 6
                        },
                        new
                        {
                            Id = 7,
                            AmountOfProducts = 3,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 1,
                            PriceForOne = 22.99m,
                            ProductId = 7
                        },
                        new
                        {
                            Id = 8,
                            AmountOfProducts = 55,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 1,
                            PriceForOne = 35.99m,
                            ProductId = 8
                        },
                        new
                        {
                            Id = 9,
                            AmountOfProducts = 33,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 1,
                            PriceForOne = 27.99m,
                            ProductId = 9
                        },
                        new
                        {
                            Id = 10,
                            AmountOfProducts = 21,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 1,
                            PriceForOne = 9.99m,
                            ProductId = 10
                        },
                        new
                        {
                            Id = 11,
                            AmountOfProducts = 11,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 1,
                            PriceForOne = 44.99m,
                            ProductId = 11
                        },
                        new
                        {
                            Id = 12,
                            AmountOfProducts = 32,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 1,
                            PriceForOne = 40.99m,
                            ProductId = 12
                        },
                        new
                        {
                            Id = 13,
                            AmountOfProducts = 12,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 1,
                            PriceForOne = 25.99m,
                            ProductId = 13
                        },
                        new
                        {
                            Id = 14,
                            AmountOfProducts = 34,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 1,
                            PriceForOne = 55.99m,
                            ProductId = 14
                        },
                        new
                        {
                            Id = 15,
                            AmountOfProducts = 11,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 1,
                            PriceForOne = 26.99m,
                            ProductId = 15
                        },
                        new
                        {
                            Id = 16,
                            AmountOfProducts = 3,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 1,
                            PriceForOne = 16.99m,
                            ProductId = 16
                        },
                        new
                        {
                            Id = 17,
                            AmountOfProducts = 4,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 1,
                            PriceForOne = 13.99m,
                            ProductId = 17
                        },
                        new
                        {
                            Id = 18,
                            AmountOfProducts = 5,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 1,
                            PriceForOne = 6.99m,
                            ProductId = 18
                        },
                        new
                        {
                            Id = 19,
                            AmountOfProducts = 24,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 2,
                            PriceForOne = 21.99m,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 20,
                            AmountOfProducts = 22,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 2,
                            PriceForOne = 18.99m,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 21,
                            AmountOfProducts = 23,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 2,
                            PriceForOne = 16.99m,
                            ProductId = 3
                        },
                        new
                        {
                            Id = 22,
                            AmountOfProducts = 53,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 2,
                            PriceForOne = 4.99m,
                            ProductId = 5
                        },
                        new
                        {
                            Id = 23,
                            AmountOfProducts = 22,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 2,
                            PriceForOne = 13.99m,
                            ProductId = 6
                        },
                        new
                        {
                            Id = 24,
                            AmountOfProducts = 4,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 2,
                            PriceForOne = 23.99m,
                            ProductId = 7
                        },
                        new
                        {
                            Id = 25,
                            AmountOfProducts = 4,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 2,
                            PriceForOne = 36.99m,
                            ProductId = 8
                        },
                        new
                        {
                            Id = 26,
                            AmountOfProducts = 33,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 2,
                            PriceForOne = 10.99m,
                            ProductId = 10
                        },
                        new
                        {
                            Id = 27,
                            AmountOfProducts = 0,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 2,
                            PriceForOne = 45.99m,
                            ProductId = 11
                        },
                        new
                        {
                            Id = 28,
                            AmountOfProducts = 12,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 2,
                            PriceForOne = 41.99m,
                            ProductId = 12
                        },
                        new
                        {
                            Id = 29,
                            AmountOfProducts = 22,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 2,
                            PriceForOne = 56.99m,
                            ProductId = 14
                        },
                        new
                        {
                            Id = 30,
                            AmountOfProducts = 53,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 2,
                            PriceForOne = 27.99m,
                            ProductId = 15
                        },
                        new
                        {
                            Id = 31,
                            AmountOfProducts = 2,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 2,
                            PriceForOne = 17.99m,
                            ProductId = 16
                        },
                        new
                        {
                            Id = 32,
                            AmountOfProducts = 2,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 2,
                            PriceForOne = 14.99m,
                            ProductId = 17
                        },
                        new
                        {
                            Id = 33,
                            AmountOfProducts = 7,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 2,
                            PriceForOne = 7.99m,
                            ProductId = 18
                        },
                        new
                        {
                            Id = 34,
                            AmountOfProducts = 8,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 3,
                            PriceForOne = 22.99m,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 35,
                            AmountOfProducts = 5,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 3,
                            PriceForOne = 18.99m,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 36,
                            AmountOfProducts = 4,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 3,
                            PriceForOne = 14.99m,
                            ProductId = 4
                        },
                        new
                        {
                            Id = 37,
                            AmountOfProducts = 4,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 3,
                            PriceForOne = 5.99m,
                            ProductId = 5
                        },
                        new
                        {
                            Id = 38,
                            AmountOfProducts = 7,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 3,
                            PriceForOne = 13.99m,
                            ProductId = 6
                        },
                        new
                        {
                            Id = 39,
                            AmountOfProducts = 34,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 3,
                            PriceForOne = 23.99m,
                            ProductId = 7
                        },
                        new
                        {
                            Id = 40,
                            AmountOfProducts = 64,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 3,
                            PriceForOne = 37.99m,
                            ProductId = 8
                        },
                        new
                        {
                            Id = 41,
                            AmountOfProducts = 33,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 3,
                            PriceForOne = 28.99m,
                            ProductId = 9
                        },
                        new
                        {
                            Id = 42,
                            AmountOfProducts = 5,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 3,
                            PriceForOne = 12.99m,
                            ProductId = 10
                        },
                        new
                        {
                            Id = 43,
                            AmountOfProducts = 1,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 3,
                            PriceForOne = 48.99m,
                            ProductId = 11
                        },
                        new
                        {
                            Id = 44,
                            AmountOfProducts = 34,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 3,
                            PriceForOne = 44.99m,
                            ProductId = 12
                        },
                        new
                        {
                            Id = 45,
                            AmountOfProducts = 54,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 3,
                            PriceForOne = 27.99m,
                            ProductId = 13
                        },
                        new
                        {
                            Id = 46,
                            AmountOfProducts = 0,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 3,
                            PriceForOne = 59.99m,
                            ProductId = 14
                        },
                        new
                        {
                            Id = 47,
                            AmountOfProducts = 0,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 3,
                            PriceForOne = 28.99m,
                            ProductId = 15
                        },
                        new
                        {
                            Id = 48,
                            AmountOfProducts = 0,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 3,
                            PriceForOne = 19.99m,
                            ProductId = 16
                        },
                        new
                        {
                            Id = 49,
                            AmountOfProducts = 7,
                            HowMuchHasBeenSold = 0,
                            PharmacyId = 3,
                            PriceForOne = 15.99m,
                            ProductId = 17
                        });
                });

            modelBuilder.Entity("ModernPharmacy.Shared.Entities.SubstanceSubstanceCategory", b =>
                {
                    b.Property<int>("SubstanceId")
                        .HasColumnType("int");

                    b.Property<int>("SubstanceCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("SubstanceSubstanceCategoryId")
                        .HasColumnType("int");

                    b.HasKey("SubstanceId", "SubstanceCategoryId");

                    b.HasIndex("SubstanceCategoryId");

                    b.ToTable("SubstanceSubstanceCategories");

                    b.HasData(
                        new
                        {
                            SubstanceId = 1,
                            SubstanceCategoryId = 1,
                            SubstanceSubstanceCategoryId = 1
                        },
                        new
                        {
                            SubstanceId = 2,
                            SubstanceCategoryId = 1,
                            SubstanceSubstanceCategoryId = 2
                        },
                        new
                        {
                            SubstanceId = 3,
                            SubstanceCategoryId = 1,
                            SubstanceSubstanceCategoryId = 3
                        },
                        new
                        {
                            SubstanceId = 4,
                            SubstanceCategoryId = 2,
                            SubstanceSubstanceCategoryId = 4
                        },
                        new
                        {
                            SubstanceId = 5,
                            SubstanceCategoryId = 2,
                            SubstanceSubstanceCategoryId = 5
                        },
                        new
                        {
                            SubstanceId = 6,
                            SubstanceCategoryId = 2,
                            SubstanceSubstanceCategoryId = 6
                        },
                        new
                        {
                            SubstanceId = 7,
                            SubstanceCategoryId = 3,
                            SubstanceSubstanceCategoryId = 7
                        },
                        new
                        {
                            SubstanceId = 8,
                            SubstanceCategoryId = 3,
                            SubstanceSubstanceCategoryId = 8
                        },
                        new
                        {
                            SubstanceId = 9,
                            SubstanceCategoryId = 3,
                            SubstanceSubstanceCategoryId = 9
                        },
                        new
                        {
                            SubstanceId = 7,
                            SubstanceCategoryId = 4,
                            SubstanceSubstanceCategoryId = 10
                        },
                        new
                        {
                            SubstanceId = 6,
                            SubstanceCategoryId = 4,
                            SubstanceSubstanceCategoryId = 11
                        },
                        new
                        {
                            SubstanceId = 4,
                            SubstanceCategoryId = 4,
                            SubstanceSubstanceCategoryId = 12
                        });
                });

            modelBuilder.Entity("ModernPharmacy.Shared.Entities.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "drug"
                        },
                        new
                        {
                            Id = 2,
                            Name = "sleep"
                        },
                        new
                        {
                            Id = 3,
                            Name = "bacteria"
                        },
                        new
                        {
                            Id = 4,
                            Name = "suplements"
                        },
                        new
                        {
                            Id = 5,
                            Name = "hygiene"
                        },
                        new
                        {
                            Id = 6,
                            Name = "children"
                        },
                        new
                        {
                            Id = 7,
                            Name = "pain"
                        },
                        new
                        {
                            Id = 8,
                            Name = "insonomia"
                        },
                        new
                        {
                            Id = 9,
                            Name = "brain"
                        },
                        new
                        {
                            Id = 10,
                            Name = "heart"
                        },
                        new
                        {
                            Id = 11,
                            Name = "diabetes"
                        },
                        new
                        {
                            Id = 12,
                            Name = "bow"
                        },
                        new
                        {
                            Id = 13,
                            Name = "anxiety"
                        },
                        new
                        {
                            Id = 14,
                            Name = "fatigue"
                        },
                        new
                        {
                            Id = 15,
                            Name = "depression"
                        },
                        new
                        {
                            Id = 16,
                            Name = "health"
                        },
                        new
                        {
                            Id = 17,
                            Name = "cold"
                        },
                        new
                        {
                            Id = 18,
                            Name = "flu"
                        });
                });

            modelBuilder.Entity("ModernPharmacy.Shared.Substance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Substances");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Description Paracetamol",
                            Name = "Paracetamol"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Description Ibuprofen",
                            Name = "Ibuprofen"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Description Tramadol",
                            Name = "Tramadol"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Description Valeriana",
                            Name = "Valeriana"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Description Zaleplon",
                            Name = "Zaleplon"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Description Eszopiclone",
                            Name = "Eszopiclone"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Description Cetirizine",
                            Name = "Cetirizine"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Description Clemastine",
                            Name = "Clemastine"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Description Dimenhydrinate",
                            Name = "Dimenhydrinate"
                        });
                });

            modelBuilder.Entity("ModernPharmacy.Shared.SubstanceCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SubstanceCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Description Painkiller",
                            Name = "Painkiller"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Description Sleeping pills",
                            Name = "Sleeping pills"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Description Antihistamines",
                            Name = "Antihistamines"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Description Antipsychotic",
                            Name = "Antypsychotic"
                        });
                });

            modelBuilder.Entity("SubstanceSubstanceCategory", b =>
                {
                    b.Property<int>("SubstanceCategoriesId")
                        .HasColumnType("int");

                    b.Property<int>("SubstancesId")
                        .HasColumnType("int");

                    b.HasKey("SubstanceCategoriesId", "SubstancesId");

                    b.HasIndex("SubstancesId");

                    b.ToTable("SubstanceSubstanceCategory");
                });

            modelBuilder.Entity("DrugSubstance", b =>
                {
                    b.HasOne("ModernPharmacy.Shared.Entities.Drug", null)
                        .WithMany()
                        .HasForeignKey("DrugsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModernPharmacy.Shared.Substance", null)
                        .WithMany()
                        .HasForeignKey("SubstancesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ModernPharmacy.Shared.Entities.Address", b =>
                {
                    b.HasOne("ModernPharmacy.Shared.Entities.Pharmacy", "Pharmacy")
                        .WithOne("Address")
                        .HasForeignKey("ModernPharmacy.Shared.Entities.Address", "PharmacyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pharmacy");
                });

            modelBuilder.Entity("ModernPharmacy.Shared.Entities.ArticleTag", b =>
                {
                    b.HasOne("ModernPharmacy.Shared.Entities.Article", "Article")
                        .WithMany("ArticleTags")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModernPharmacy.Shared.Entities.Tag", "Tag")
                        .WithMany("ArticleTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("ModernPharmacy.Shared.Entities.DrugSubstance", b =>
                {
                    b.HasOne("ModernPharmacy.Shared.Entities.Drug", "Drug")
                        .WithMany()
                        .HasForeignKey("DrugId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModernPharmacy.Shared.Substance", "Substance")
                        .WithMany()
                        .HasForeignKey("SubstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Drug");

                    b.Navigation("Substance");
                });

            modelBuilder.Entity("ModernPharmacy.Shared.Entities.Product", b =>
                {
                    b.HasOne("ModernPharmacy.Shared.Entities.DifferentProduct", "DifferentProduct")
                        .WithOne("Product")
                        .HasForeignKey("ModernPharmacy.Shared.Entities.Product", "DifferentProductId");

                    b.HasOne("ModernPharmacy.Shared.Entities.Drug", "Drug")
                        .WithOne("Product")
                        .HasForeignKey("ModernPharmacy.Shared.Entities.Product", "DrugId");

                    b.Navigation("DifferentProduct");

                    b.Navigation("Drug");
                });

            modelBuilder.Entity("ModernPharmacy.Shared.Entities.ProductState", b =>
                {
                    b.HasOne("ModernPharmacy.Shared.Entities.Pharmacy", "Pharmacy")
                        .WithMany()
                        .HasForeignKey("PharmacyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModernPharmacy.Shared.Entities.Product", "Product")
                        .WithMany("ProductStates")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pharmacy");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ModernPharmacy.Shared.Entities.SubstanceSubstanceCategory", b =>
                {
                    b.HasOne("ModernPharmacy.Shared.SubstanceCategory", "SubstanceCategory")
                        .WithMany()
                        .HasForeignKey("SubstanceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModernPharmacy.Shared.Substance", "Substance")
                        .WithMany()
                        .HasForeignKey("SubstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Substance");

                    b.Navigation("SubstanceCategory");
                });

            modelBuilder.Entity("SubstanceSubstanceCategory", b =>
                {
                    b.HasOne("ModernPharmacy.Shared.SubstanceCategory", null)
                        .WithMany()
                        .HasForeignKey("SubstanceCategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModernPharmacy.Shared.Substance", null)
                        .WithMany()
                        .HasForeignKey("SubstancesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ModernPharmacy.Shared.Entities.Article", b =>
                {
                    b.Navigation("ArticleTags");
                });

            modelBuilder.Entity("ModernPharmacy.Shared.Entities.DifferentProduct", b =>
                {
                    b.Navigation("Product")
                        .IsRequired();
                });

            modelBuilder.Entity("ModernPharmacy.Shared.Entities.Drug", b =>
                {
                    b.Navigation("Product")
                        .IsRequired();
                });

            modelBuilder.Entity("ModernPharmacy.Shared.Entities.Pharmacy", b =>
                {
                    b.Navigation("Address")
                        .IsRequired();
                });

            modelBuilder.Entity("ModernPharmacy.Shared.Entities.Product", b =>
                {
                    b.Navigation("ProductStates");
                });

            modelBuilder.Entity("ModernPharmacy.Shared.Entities.Tag", b =>
                {
                    b.Navigation("ArticleTags");
                });
#pragma warning restore 612, 618
        }
    }
}
