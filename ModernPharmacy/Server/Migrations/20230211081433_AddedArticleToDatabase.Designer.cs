// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ModernPharmacy.Server.Data;

#nullable disable

namespace ModernPharmacy.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230211081433_AddedArticleToDatabase")]
    partial class AddedArticleToDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DrugSubstance", b =>
                {
                    b.Property<int>("DrugsId")
                        .HasColumnType("int");

                    b.Property<int>("SubstancesId")
                        .HasColumnType("int");

                    b.HasKey("DrugsId", "SubstancesId");

                    b.HasIndex("SubstancesId");

                    b.ToTable("DrugSubstance");
                });

            modelBuilder.Entity("ModernPharmacy.Shared.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PharmacyId")
                        .HasColumnType("int");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PharmacyId")
                        .IsUnique();

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Międzylesie",
                            PharmacyId = 1,
                            PostalCode = "57530",
                            Street = "Graniczna 7"
                        },
                        new
                        {
                            Id = 2,
                            City = "Wrocław",
                            PharmacyId = 2,
                            PostalCode = "21599",
                            Street = "Wolności 22c"
                        },
                        new
                        {
                            Id = 3,
                            City = "Szczecin",
                            PharmacyId = 3,
                            PostalCode = "35300",
                            Street = "Słowiańska 3"
                        },
                        new
                        {
                            Id = 4,
                            City = "Gryfice",
                            PharmacyId = 4,
                            PostalCode = "64554",
                            Street = "Poniatowska 4"
                        },
                        new
                        {
                            Id = 5,
                            City = "Gryfice",
                            PharmacyId = 5,
                            PostalCode = "72-300",
                            Street = "Grunwaldzka 3"
                        });
                });

            modelBuilder.Entity("ModernPharmacy.Shared.Entities.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("ModernPharmacy.Shared.Entities.Drug", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LumpSumDrug")
                        .HasColumnType("bit");

                    b.Property<int?>("MilligramsPerTablets")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumberOfTablets")
                        .HasColumnType("int");

                    b.Property<bool>("PrescriptionRequired")
                        .HasColumnType("bit");

                    b.Property<bool>("ShippingOption")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Drugs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Description Apap",
                            LumpSumDrug = false,
                            MilligramsPerTablets = 500,
                            Name = "Apap",
                            NumberOfTablets = 10,
                            PrescriptionRequired = false,
                            ShippingOption = true
                        },
                        new
                        {
                            Id = 2,
                            Description = "Description Apap",
                            LumpSumDrug = false,
                            MilligramsPerTablets = 500,
                            Name = "Apap",
                            NumberOfTablets = 5,
                            PrescriptionRequired = false,
                            ShippingOption = true
                        },
                        new
                        {
                            Id = 3,
                            Description = "Description Apap",
                            LumpSumDrug = false,
                            MilligramsPerTablets = 500,
                            Name = "Apap",
                            NumberOfTablets = 20,
                            PrescriptionRequired = false,
                            ShippingOption = true
                        },
                        new
                        {
                            Id = 4,
                            Description = "Description Tylenol",
                            LumpSumDrug = false,
                            MilligramsPerTablets = 500,
                            Name = "Tylenol",
                            NumberOfTablets = 100,
                            PrescriptionRequired = false,
                            ShippingOption = true
                        },
                        new
                        {
                            Id = 5,
                            Description = "Description Nurofen",
                            LumpSumDrug = false,
                            MilligramsPerTablets = 200,
                            Name = "Nurofen",
                            NumberOfTablets = 20,
                            PrescriptionRequired = false,
                            ShippingOption = true
                        },
                        new
                        {
                            Id = 6,
                            Description = "Description Ibuprom",
                            LumpSumDrug = false,
                            MilligramsPerTablets = 200,
                            Name = "Ibuprom",
                            NumberOfTablets = 10,
                            PrescriptionRequired = false,
                            ShippingOption = true
                        },
                        new
                        {
                            Id = 7,
                            Description = "Description Tramal Retard",
                            LumpSumDrug = true,
                            MilligramsPerTablets = 100,
                            Name = "Tramal retard",
                            NumberOfTablets = 50,
                            PrescriptionRequired = true,
                            ShippingOption = false
                        },
                        new
                        {
                            Id = 8,
                            Description = "Description Valeriana",
                            LumpSumDrug = false,
                            MilligramsPerTablets = 2500,
                            Name = "Valeriana",
                            NumberOfTablets = 60,
                            PrescriptionRequired = false,
                            ShippingOption = false
                        },
                        new
                        {
                            Id = 9,
                            Description = "Description Morfeo",
                            LumpSumDrug = false,
                            MilligramsPerTablets = 10,
                            Name = "Morfeo",
                            NumberOfTablets = 10,
                            PrescriptionRequired = false,
                            ShippingOption = false
                        },
                        new
                        {
                            Id = 10,
                            Description = "Description Sonata",
                            LumpSumDrug = false,
                            MilligramsPerTablets = 10,
                            Name = "Sonata",
                            NumberOfTablets = 10,
                            PrescriptionRequired = false,
                            ShippingOption = false
                        },
                        new
                        {
                            Id = 11,
                            Description = "Description Aviomarin",
                            LumpSumDrug = false,
                            MilligramsPerTablets = 500,
                            Name = "Aviomarin",
                            NumberOfTablets = 5,
                            PrescriptionRequired = false,
                            ShippingOption = false
                        },
                        new
                        {
                            Id = 12,
                            Description = "Description Zirtec",
                            LumpSumDrug = true,
                            MilligramsPerTablets = 10,
                            Name = "Zirtec",
                            NumberOfTablets = 20,
                            PrescriptionRequired = true,
                            ShippingOption = false
                        });
                });

            modelBuilder.Entity("ModernPharmacy.Shared.Entities.DrugSubstance", b =>
                {
                    b.Property<int>("SubstanceId")
                        .HasColumnType("int");

                    b.Property<int>("DrugId")
                        .HasColumnType("int");

                    b.Property<int>("DrugSubstanceId")
                        .HasColumnType("int");

                    b.HasKey("SubstanceId", "DrugId");

                    b.HasIndex("DrugId");

                    b.ToTable("DrugSubstances");

                    b.HasData(
                        new
                        {
                            SubstanceId = 1,
                            DrugId = 1,
                            DrugSubstanceId = 1
                        },
                        new
                        {
                            SubstanceId = 1,
                            DrugId = 2,
                            DrugSubstanceId = 2
                        },
                        new
                        {
                            SubstanceId = 1,
                            DrugId = 3,
                            DrugSubstanceId = 3
                        },
                        new
                        {
                            SubstanceId = 2,
                            DrugId = 4,
                            DrugSubstanceId = 4
                        },
                        new
                        {
                            SubstanceId = 2,
                            DrugId = 5,
                            DrugSubstanceId = 5
                        },
                        new
                        {
                            SubstanceId = 2,
                            DrugId = 6,
                            DrugSubstanceId = 6
                        },
                        new
                        {
                            SubstanceId = 3,
                            DrugId = 7,
                            DrugSubstanceId = 7
                        },
                        new
                        {
                            SubstanceId = 4,
                            DrugId = 8,
                            DrugSubstanceId = 8
                        },
                        new
                        {
                            SubstanceId = 5,
                            DrugId = 9,
                            DrugSubstanceId = 9
                        },
                        new
                        {
                            SubstanceId = 5,
                            DrugId = 10,
                            DrugSubstanceId = 10
                        },
                        new
                        {
                            SubstanceId = 9,
                            DrugId = 12,
                            DrugSubstanceId = 11
                        },
                        new
                        {
                            SubstanceId = 7,
                            DrugId = 11,
                            DrugSubstanceId = 12
                        });
                });

            modelBuilder.Entity("ModernPharmacy.Shared.Entities.Pharmacy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasPrescriptionDrugs")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pharmacies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressId = 0,
                            ContactEmail = "slowik@apteka.pl",
                            ContactNumber = "723171222",
                            HasPrescriptionDrugs = true,
                            Name = "Slownik"
                        },
                        new
                        {
                            Id = 2,
                            AddressId = 0,
                            ContactEmail = "drugaapteka@apteka.pl",
                            ContactNumber = "594034033",
                            HasPrescriptionDrugs = true,
                            Name = "DrugaApteka"
                        },
                        new
                        {
                            Id = 3,
                            AddressId = 0,
                            ContactEmail = "szczecinska@apteka.pl",
                            ContactNumber = "660650444",
                            HasPrescriptionDrugs = false,
                            Name = "Szczecinska"
                        },
                        new
                        {
                            Id = 4,
                            AddressId = 0,
                            ContactEmail = "gryficka@wp.pl",
                            ContactNumber = "594033222",
                            HasPrescriptionDrugs = false,
                            Name = "Gryficka"
                        },
                        new
                        {
                            Id = 5,
                            AddressId = 0,
                            ContactEmail = "kamil-losiak@wp.pl",
                            ContactNumber = "730660434",
                            HasPrescriptionDrugs = true,
                            Name = "ModernPharmacy"
                        });
                });

            modelBuilder.Entity("ModernPharmacy.Shared.Entities.SubstanceSubstanceCategory", b =>
                {
                    b.Property<int>("SubstanceId")
                        .HasColumnType("int");

                    b.Property<int>("SubstanceCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("SubstanceSubstanceCategoryId")
                        .HasColumnType("int");

                    b.HasKey("SubstanceId", "SubstanceCategoryId");

                    b.HasIndex("SubstanceCategoryId");

                    b.ToTable("SubstanceSubstanceCategories");

                    b.HasData(
                        new
                        {
                            SubstanceId = 1,
                            SubstanceCategoryId = 1,
                            SubstanceSubstanceCategoryId = 1
                        },
                        new
                        {
                            SubstanceId = 2,
                            SubstanceCategoryId = 1,
                            SubstanceSubstanceCategoryId = 2
                        },
                        new
                        {
                            SubstanceId = 3,
                            SubstanceCategoryId = 1,
                            SubstanceSubstanceCategoryId = 3
                        },
                        new
                        {
                            SubstanceId = 4,
                            SubstanceCategoryId = 2,
                            SubstanceSubstanceCategoryId = 4
                        },
                        new
                        {
                            SubstanceId = 5,
                            SubstanceCategoryId = 2,
                            SubstanceSubstanceCategoryId = 5
                        },
                        new
                        {
                            SubstanceId = 6,
                            SubstanceCategoryId = 2,
                            SubstanceSubstanceCategoryId = 6
                        },
                        new
                        {
                            SubstanceId = 7,
                            SubstanceCategoryId = 3,
                            SubstanceSubstanceCategoryId = 7
                        },
                        new
                        {
                            SubstanceId = 8,
                            SubstanceCategoryId = 3,
                            SubstanceSubstanceCategoryId = 8
                        },
                        new
                        {
                            SubstanceId = 9,
                            SubstanceCategoryId = 3,
                            SubstanceSubstanceCategoryId = 9
                        },
                        new
                        {
                            SubstanceId = 7,
                            SubstanceCategoryId = 4,
                            SubstanceSubstanceCategoryId = 10
                        },
                        new
                        {
                            SubstanceId = 6,
                            SubstanceCategoryId = 4,
                            SubstanceSubstanceCategoryId = 11
                        },
                        new
                        {
                            SubstanceId = 4,
                            SubstanceCategoryId = 4,
                            SubstanceSubstanceCategoryId = 12
                        });
                });

            modelBuilder.Entity("ModernPharmacy.Shared.Substance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Substances");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Description Paracetamol",
                            Name = "Paracetamol"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Description Ibuprofen",
                            Name = "Ibuprofen"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Description Tramadol",
                            Name = "Tramadol"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Description Valeriana",
                            Name = "Valeriana"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Description Zaleplon",
                            Name = "Zaleplon"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Description Eszopiclone",
                            Name = "Eszopiclone"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Description Cetirizine",
                            Name = "Cetirizine"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Description Clemastine",
                            Name = "Clemastine"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Description Dimenhydrinate",
                            Name = "Dimenhydrinate"
                        });
                });

            modelBuilder.Entity("ModernPharmacy.Shared.SubstanceCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SubstanceCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Description Painkiller",
                            Name = "Painkiller"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Description Sleeping pills",
                            Name = "Sleeping pills"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Description Antihistamines",
                            Name = "Antihistamines"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Description Antipsychotic",
                            Name = "Antypsychotic"
                        });
                });

            modelBuilder.Entity("SubstanceSubstanceCategory", b =>
                {
                    b.Property<int>("SubstanceCategoriesId")
                        .HasColumnType("int");

                    b.Property<int>("SubstancesId")
                        .HasColumnType("int");

                    b.HasKey("SubstanceCategoriesId", "SubstancesId");

                    b.HasIndex("SubstancesId");

                    b.ToTable("SubstanceSubstanceCategory");
                });

            modelBuilder.Entity("DrugSubstance", b =>
                {
                    b.HasOne("ModernPharmacy.Shared.Entities.Drug", null)
                        .WithMany()
                        .HasForeignKey("DrugsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModernPharmacy.Shared.Substance", null)
                        .WithMany()
                        .HasForeignKey("SubstancesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ModernPharmacy.Shared.Entities.Address", b =>
                {
                    b.HasOne("ModernPharmacy.Shared.Entities.Pharmacy", "Pharmacy")
                        .WithOne("Address")
                        .HasForeignKey("ModernPharmacy.Shared.Entities.Address", "PharmacyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pharmacy");
                });

            modelBuilder.Entity("ModernPharmacy.Shared.Entities.DrugSubstance", b =>
                {
                    b.HasOne("ModernPharmacy.Shared.Entities.Drug", "Drug")
                        .WithMany()
                        .HasForeignKey("DrugId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModernPharmacy.Shared.Substance", "Substance")
                        .WithMany()
                        .HasForeignKey("SubstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Drug");

                    b.Navigation("Substance");
                });

            modelBuilder.Entity("ModernPharmacy.Shared.Entities.SubstanceSubstanceCategory", b =>
                {
                    b.HasOne("ModernPharmacy.Shared.SubstanceCategory", "SubstanceCategory")
                        .WithMany()
                        .HasForeignKey("SubstanceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModernPharmacy.Shared.Substance", "Substance")
                        .WithMany()
                        .HasForeignKey("SubstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Substance");

                    b.Navigation("SubstanceCategory");
                });

            modelBuilder.Entity("SubstanceSubstanceCategory", b =>
                {
                    b.HasOne("ModernPharmacy.Shared.SubstanceCategory", null)
                        .WithMany()
                        .HasForeignKey("SubstanceCategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModernPharmacy.Shared.Substance", null)
                        .WithMany()
                        .HasForeignKey("SubstancesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ModernPharmacy.Shared.Entities.Pharmacy", b =>
                {
                    b.Navigation("Address")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
